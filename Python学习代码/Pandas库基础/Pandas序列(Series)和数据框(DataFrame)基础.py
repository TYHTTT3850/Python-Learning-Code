"""
Pandas库在NumPy的基础上开发
Pandas库基础的三个类: 1、Series(序列)，带标签的一维数组，行标签称作index(索引)
                   2、DataFrame(数据框)，带标签的行和列构成的二维数组，可以看作多个Series的集合
                   3、Panel(面板)，三维甚至更高维，不太常用。
Pandas库切片索引时: 1、根据从0开始的下标切片索引时，不包括末尾。(左闭右开区间)
                  2、根据标签具体的值切片索引时，会包括末尾。(闭区间)
"""
import numpy as np, pandas as pd

"""--------------------序列创建--------------------"""
print("--------------------序列创建--------------------")
s1 = pd.Series(np.array([10.5,20.5,30.5]))#由numpy数组构造序列
s2 = pd.Series({"北京":10.5,"上海":20.5,"广东":30.5})#由字典构造序列
s3 = pd.Series([10.5,20.5,30.5],index=['a','b','c'])#由列表构造序列并命名行标签
print(s1,end="\n--------------\n")#行标签为行号，从0开始
print(s2,end="\n--------------\n")#行标签为字典的键
print(s3,end="\n--------------\n")#行标签为自己命名的行标签
print()

"""--------------------序列属性--------------------"""
print("--------------------序列属性--------------------")
s1 = pd.Series(np.array([10.5,20.5,30.5]))
s2 = pd.Series(np.array([10.5,20.5,30.5]),index=['a','b','c'])

# index，Series类属性。返回序列所有的行标签。
print(s1.index,end="\n--------------\n") #不指定行标签时，默认是从0开始的下标
print(s2.index,end="\n--------------\n") #指定了行标签时，输出指定的行标签

# values，Series类属性。返回序列中所有的值(封装在numpy.ndarray中)。
print(s1.values,end="\n--------------\n")
print(s2.values,end="\n--------------\n")
print()

"""--------------------序列索引--------------------"""
print("--------------------序列索引--------------------")
s = pd.Series([10.5,20.5,98],index=['a','b','c'])
print(s['a'],type(s['a']),sep="\n",end="\n--------------\n") #根据行标签索引
print(s[['b','c']],type(s[['b','c']]),sep="\n",end="\n--------------\n") #索引多个
print(s['a':'c'],type(s['a':'c']),sep="\n",end="\n--------------\n") #根据标签具体的值切片索引时是闭区间
print(s[0:2],type(s[0:2]),sep="\n",end="\n--------------\n") #根据从0开始的行号切片索引时是左闭右开区间
print()

"""--------------------序列计算--------------------"""
print("--------------------序列计算--------------------")
s = pd.Series([10.5,20.5,98],index=['a','b','c'])
b1 = s.mean()#平均值
b2 = s.std()#标准差
b3 = s.var()#方差
b4 = s.max()#最大值
b5 = s.min()#最小值
b6 = s.describe()#描述数据基本情况(非NaN个数、均值、标准差，最大值，最小值，25%，50%，75%分位数)
print(b1,b2,b3,b4,b5)
print(b6,type(b6),sep="\n",end="\n--------------\n")
print()

"""--------------------数据框创建--------------------"""
print("--------------------数据框创建--------------------")
a = np.array([[1,2,3],[4,5,6],[7,8,9]])
df1 = pd.DataFrame(a)#由numpy数组构造数据框
df2 = pd.DataFrame(a,index=["l1","l2","l3"],columns=["c1","c2","c3"])#指定行标签和列标签
df3 = pd.DataFrame({"c1":a[:,0],"c2":a[:,1],"c3":a[:,2]})#由字典构造数据框
print(df1,end="\n--------------\n")#行(列)标签为行(列)号，从0开始
print(df2,end="\n--------------\n")#行(列)标签为自己命名的行(列)标签
print(df3,end="\n--------------\n")#行(列)标签为字典的键
print()

"""--------------------数据框属性--------------------"""
print("--------------------数据框属性--------------------")
a = np.array([[1,2,3],[4,5,6],[7,8,9]])
df1 = pd.DataFrame(a)
df2 = pd.DataFrame(a,index=["l1","l2","l3"],columns=["c1","c2","c3"])

# index，DataFrame类属性。返回数据框所有的行标签。
print(df1.index,end="\n--------------\n") #不指定行标签时，默认是从0开始的下标
print(df2.index,end="\n--------------\n") #指定了行标签时，输出指定的行标签

# columns，DataFrame类属性。返回数据框所有的列标签。
print(df1.columns,end="\n--------------\n") #不指定列标签时，默认是从0开始的下标
print(df2.columns,end="\n--------------\n") #指定了列标签时，输出指定的列标签

# values，DataFrame类属性。返回数据框中所有的值(封装在numpy.ndarray中)。
print(df1.values,end="\n--------------\n")
print(df2.values,end="\n--------------\n")
print()

"""--------------------数据框索引--------------------"""
print("--------------------数据框索引--------------------")
a = np.array([[1,2,3],[4,5,6],[7,8,9]])
df = pd.DataFrame(a,index=["l1","l2","l3"],columns=["c1","c2","c3"])

# 列索引
print(df["c1"],type(df["c1"]),sep="\n",end="\n--------------\n") #选择一列
print(df[["c2","c3"]],type(df[["c2","c3"]]),sep="\n",end="\n--------------\n") #选择多列

# 行索引，[]中需要使用冒号切片。
print(df["l1":"l1"],type(df["l1":"l1"]),sep="\n",end="\n--------------\n") #选择单行
print(df["l2":"l3"],type(df["l2":"l3"]),sep="\n",end="\n--------------\n") #选择多行，闭区间
print(df[1:2],type(df[1:2]),sep="\n",end="\n--------------\n") #选择单行，左闭右开区间
print(df[0:2],type(df[0:2]),sep="\n",end="\n--------------\n") #选择多行，左闭右开区间

# loc索引器，可以理解成DataFrame类的访问属性。根据行标签和列标签的值来选取数据
print(df.loc["l1"],type(df.loc["l1"]),sep="\n",end="\n--------------\n") #选择单行
print(df.loc[["l2","l3"]],sep="\n",end="\n--------------\n") #选择多行
print(df.loc["l1":"l3"],type(df.loc["l1":"l3"]),sep="\n",end="\n--------------\n") #切片索引，闭区间
print(df.loc[:,"c1"],end="\n--------------\n") #选择所有行，某一列
print(df.loc["l1",:],end="\n--------------\n") #选择某一行，所有列
print(df.loc["l1","c1"],end="\n--------------\n") #选择特定行列的元素
"""类似于numpy.ndarray的切片索引"""

# iloc索引器，可以理解成DataFrame类的访问属性。根据从0开始的下标位置来进行索引
print(df.iloc[0],type(df.iloc[0]),sep="\n",end="\n--------------\n") #选择单行
print(df.iloc[[1,2]],type(df.iloc[[1,2]]),sep="\n",end="\n--------------\n") #选择多行
print(df.iloc[0:2],type(df.iloc[0:2]),sep="\n",end="\n--------------\n") #切片索引，左闭右开区间
print(df.iloc[:,0],end="\n--------------\n") #选择所有行，某一列
print(df.iloc[0,:],end="\n--------------\n") #选择某一行，所有列
print(df.iloc[0,0],end="\n--------------\n") #选择特定行列的元素
"""类似于numpy.ndarray的切片索引"""

# 布尔索引
df = pd.DataFrame([['F',22, 90],['M',32, 75],['F',18, 82],['M',14, 93]],
                  columns=['gender','age', 'score'],
                  index = ['小红', '小亮', '小兰', '小明'])
print(df.loc[df['gender']=='M',:],end="\n--------------\n")
print(df[df['gender']=='M'],end="\n--------------\n")
